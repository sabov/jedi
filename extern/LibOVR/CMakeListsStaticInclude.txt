#
# To build it statically into a project just include this file,
# e.g.: INCLUDE(${CMAKE_SOURCE_DIR}/extern/LibOVR/CMakeListsStaticInclude.txt)
#

ADD_DEFINITIONS(-DACGL_USE_OCULUS_RIFT)

# Find all used files of certain file-types
FILE(GLOB_RECURSE SOURCE_FILES_CPP "${CMAKE_CURRENT_LIST_DIR}/*.cpp")
FILE(GLOB_RECURSE HEADER_FILES_H "${CMAKE_CURRENT_LIST_DIR}/*.h")

FILE(GLOB_RECURSE WIN_FILES   "${CMAKE_CURRENT_LIST_DIR}/*Win*")
FILE(GLOB_RECURSE MAC_FILES   "${CMAKE_CURRENT_LIST_DIR}/*OSX*")
FILE(GLOB_RECURSE X11_FILES   "${CMAKE_CURRENT_LIST_DIR}/*Linux*")

# on OSX, remove the windows specific files:
IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    # no windows files:
    list(REMOVE_ITEM SOURCE_FILES_CPP ${WIN_FILES})
    list(REMOVE_ITEM HEADER_FILES_H ${WIN_FILES})
    # no X11 files:
    list(REMOVE_ITEM SOURCE_FILES_CPP ${X11_FILES})
    list(REMOVE_ITEM HEADER_FILES_H ${X11_FILES})
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

# on windows remove the Mac specific files:
IF(WIN32)
    # no mac files:
    list(REMOVE_ITEM SOURCE_FILES_CPP ${MAC_FILES})
    list(REMOVE_ITEM HEADER_FILES_H ${MAC_FILES})
    # no X11 files:
    list(REMOVE_ITEM SOURCE_FILES_CPP ${X11_FILES})
    list(REMOVE_ITEM HEADER_FILES_H ${X11_FILES})
    list(REMOVE_ITEM SOURCE_FILES_CPP "${CMAKE_CURRENT_LIST_DIR}/Src/Kernel/OVR_ThreadsPthread.cpp")
    list(REMOVE_ITEM HEADER_FILES_H "${CMAKE_CURRENT_LIST_DIR}/Src/Kernel/OVR_ThreadsPthread.h")

    SET(RIFT_LIBRARIES Winmm.dll Setupapi.lib)
    ADD_DEFINITIONS(-DUNICODE)
ENDIF(WIN32)

# linux
IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    # no OSX files:
    list(REMOVE_ITEM SOURCE_FILES_CPP ${MAC_FILES})
    list(REMOVE_ITEM HEADER_FILES_H ${MAC_FILES})
    # no windows files:
    list(REMOVE_ITEM SOURCE_FILES_CPP ${WIN_FILES})
    list(REMOVE_ITEM HEADER_FILES_H ${WIN_FILES})

    SET(RIFT_LIBRARIES -ludev -lpthread -lX11 -lXinerama)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

SET(HEADER_FILES ${HEADER_FILES} ${HEADER_FILES_H} )
SET(SOURCE_FILES ${SOURCE_FILES} ${SOURCE_FILES_CPP})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/Include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/Src)

SET(LIBRARIES ${LIBRARIES} ${RIFT_LIBRARIES})
